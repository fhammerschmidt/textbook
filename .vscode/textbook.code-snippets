{
	// Place your textbook workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"OCaml Code Cell": {
		"scope": "markdown",
		"prefix": [
			"code-cell",
			"cc",
			"```"
		],
		"body": [
			"```{code-cell} ocaml",
			"$1",
			"```"
		],
	},
	"Raises Exception": {
		"scope": "ocaml",
		"prefix": [
			"raises-exception",
			"re"
		],
		"body": [
			":tags: [\"raises-exception\"]"
		],
	},
	"Hide Output": {
		"scope": "ocaml",
		"prefix": [
			"hide-output",
			"ho"
		],
		"body": [
			":tags: [\"hide-output\"]"
		],
	},
	"Jupytext OCaml Header": {
		"scope": "markdown",
		"prefix": [
			"header",
			"jupytext"
		],
		"body": [
			"---",
			"jupytext:",
			"  cell_metadata_filter: -all",
			"  formats: md:myst",
			"  text_representation:",
			"    extension: .md",
			"    format_name: myst",
			"    format_version: 0.13",
			"    jupytext_version: 1.10.3",
			"kernelspec:",
			"  display_name: OCaml",
			"  language: OCaml",
			"  name: ocaml-jupyter",
			"---",
		]
	},
	"Video Embed": {
		"scope": "markdown",
		"prefix": [
			"ve",
			"video",
			"video_embed",
			"video-embed"
		],
		"body": [
			"{{ video_embed | replace(\"%%VID%%\", \"$1\")}}"
		],
	}
}